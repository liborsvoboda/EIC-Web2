{"version":3,"file":"8566.js","mappings":"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","sources":["webpack://demo/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n"],"names":["_util","serviceIds","Map","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","serviceId","has","get","id","target","key","index","arguments","length","Error","push","storeServiceDependency","toString","set","Registry","constructor","this","data","add","as","ColorScheme","isHighContrast","scheme","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","IThemeService","themeColorFromId","getThemeTypeSelector","type","Extensions","ThemingContribution","themingRegistry","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","fire","idx","indexOf","splice","getThemingParticipants","registerThemingParticipant","Themable","themeService","super","theme","getColorTheme","_register","onDidColorThemeChange","onThemeChange","updateStyles"],"sourceRoot":""}