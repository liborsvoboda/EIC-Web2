{"version":3,"file":"4600.js","mappings":"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","sources":["webpack://demo/../../node_modules/monaco-editor/esm/vs/base/common/extpath.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/editor/common/languageSelector.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/editor/common/languageFeatureRegistry.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/descriptors.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/extensions.js","webpack://demo/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { startsWithIgnoreCase } from './strings.js';\nexport function isPathSeparator(code) {\n    return code === 47 /* CharCode.Slash */ || code === 92 /* CharCode.Backslash */;\n}\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        // /user/far\n        // ^\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        // check for windows drive letter c:\\ or c:\n        if (path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n    return '';\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true; // same path, different casing\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nexport function isWindowsDriveLetter(char0) {\n    return char0 >= 65 /* CharCode.A */ && char0 <= 90 /* CharCode.Z */ || char0 >= 97 /* CharCode.a */ && char0 <= 122 /* CharCode.z */;\n}\nexport function hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 /* CharCode.Colon */;\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { match as matchGlobPattern } from '../../base/common/glob.js';\nimport { normalize } from '../../base/common/path.js';\nexport function score(selector, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType) {\n    if (Array.isArray(selector)) {\n        // array -> take max individual value\n        let ret = 0;\n        for (const filter of selector) {\n            const value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType);\n            if (value === 10) {\n                return value; // already at the highest\n            }\n            if (value > ret) {\n                ret = value;\n            }\n        }\n        return ret;\n    }\n    else if (typeof selector === 'string') {\n        if (!candidateIsSynchronized) {\n            return 0;\n        }\n        // short-hand notion, desugars to\n        // 'fooLang' -> { language: 'fooLang'}\n        // '*' -> { language: '*' }\n        if (selector === '*') {\n            return 5;\n        }\n        else if (selector === candidateLanguage) {\n            return 10;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (selector) {\n        // filter -> select accordingly, use defaults for scheme\n        const { language, pattern, scheme, hasAccessToAllModels, notebookType } = selector; // TODO: microsoft/TypeScript#42768\n        if (!candidateIsSynchronized && !hasAccessToAllModels) {\n            return 0;\n        }\n        // selector targets a notebook -> use the notebook uri instead\n        // of the \"normal\" document uri.\n        if (notebookType && candidateNotebookUri) {\n            candidateUri = candidateNotebookUri;\n        }\n        let ret = 0;\n        if (scheme) {\n            if (scheme === candidateUri.scheme) {\n                ret = 10;\n            }\n            else if (scheme === '*') {\n                ret = 5;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (language) {\n            if (language === candidateLanguage) {\n                ret = 10;\n            }\n            else if (language === '*') {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (notebookType) {\n            if (notebookType === candidateNotebookType) {\n                ret = 10;\n            }\n            else if (notebookType === '*' && candidateNotebookType !== undefined) {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (pattern) {\n            let normalizedPattern;\n            if (typeof pattern === 'string') {\n                normalizedPattern = pattern;\n            }\n            else {\n                // Since this pattern has a `base` property, we need\n                // to normalize this path first before passing it on\n                // because we will compare it against `Uri.fsPath`\n                // which uses platform specific separators.\n                // Refs: https://github.com/microsoft/vscode/issues/99938\n                normalizedPattern = { ...pattern, base: normalize(pattern.base) };\n            }\n            if (normalizedPattern === candidateUri.fsPath || matchGlobPattern(normalizedPattern, candidateUri.fsPath)) {\n                ret = 10;\n            }\n            else {\n                return 0;\n            }\n        }\n        return ret;\n    }\n    else {\n        return 0;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageFeaturesService = createDecorator('ILanguageFeaturesService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { toDisposable } from '../../base/common/lifecycle.js';\nimport { shouldSynchronizeModel } from './model.js';\nimport { score } from './languageSelector.js';\nfunction isExclusive(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    else if (Array.isArray(selector)) {\n        return selector.every(isExclusive);\n    }\n    else {\n        return !!selector.exclusive; // TODO: microsoft/TypeScript#42768\n    }\n}\nclass MatchCandidate {\n    constructor(uri, languageId, notebookUri, notebookType, recursive) {\n        this.uri = uri;\n        this.languageId = languageId;\n        this.notebookUri = notebookUri;\n        this.notebookType = notebookType;\n        this.recursive = recursive;\n    }\n    equals(other) {\n        return this.notebookType === other.notebookType\n            && this.languageId === other.languageId\n            && this.uri.toString() === other.uri.toString()\n            && this.notebookUri?.toString() === other.notebookUri?.toString()\n            && this.recursive === other.recursive;\n    }\n}\nexport class LanguageFeatureRegistry {\n    constructor(_notebookInfoResolver) {\n        this._notebookInfoResolver = _notebookInfoResolver;\n        this._clock = 0;\n        this._entries = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    register(selector, provider) {\n        let entry = {\n            selector,\n            provider,\n            _score: -1,\n            _time: this._clock++\n        };\n        this._entries.push(entry);\n        this._lastCandidate = undefined;\n        this._onDidChange.fire(this._entries.length);\n        return toDisposable(() => {\n            if (entry) {\n                const idx = this._entries.indexOf(entry);\n                if (idx >= 0) {\n                    this._entries.splice(idx, 1);\n                    this._lastCandidate = undefined;\n                    this._onDidChange.fire(this._entries.length);\n                    entry = undefined;\n                }\n            }\n        });\n    }\n    has(model) {\n        return this.all(model).length > 0;\n    }\n    all(model) {\n        if (!model) {\n            return [];\n        }\n        this._updateScores(model, false);\n        const result = [];\n        // from registry\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                result.push(entry.provider);\n            }\n        }\n        return result;\n    }\n    ordered(model, recursive = false) {\n        const result = [];\n        this._orderedForEach(model, recursive, entry => result.push(entry.provider));\n        return result;\n    }\n    orderedGroups(model) {\n        const result = [];\n        let lastBucket;\n        let lastBucketScore;\n        this._orderedForEach(model, false, entry => {\n            if (lastBucket && lastBucketScore === entry._score) {\n                lastBucket.push(entry.provider);\n            }\n            else {\n                lastBucketScore = entry._score;\n                lastBucket = [entry.provider];\n                result.push(lastBucket);\n            }\n        });\n        return result;\n    }\n    _orderedForEach(model, recursive, callback) {\n        this._updateScores(model, recursive);\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                callback(entry);\n            }\n        }\n    }\n    _updateScores(model, recursive) {\n        const notebookInfo = this._notebookInfoResolver?.(model.uri);\n        // use the uri (scheme, pattern) of the notebook info iff we have one\n        // otherwise it's the model's/document's uri\n        const candidate = notebookInfo\n            ? new MatchCandidate(model.uri, model.getLanguageId(), notebookInfo.uri, notebookInfo.type, recursive)\n            : new MatchCandidate(model.uri, model.getLanguageId(), undefined, undefined, recursive);\n        if (this._lastCandidate?.equals(candidate)) {\n            // nothing has changed\n            return;\n        }\n        this._lastCandidate = candidate;\n        for (const entry of this._entries) {\n            entry._score = score(entry.selector, candidate.uri, candidate.languageId, shouldSynchronizeModel(model), candidate.notebookUri, candidate.notebookType);\n            if (isExclusive(entry.selector) && entry._score > 0) {\n                if (recursive) {\n                    entry._score = 0;\n                }\n                else {\n                    // support for one exclusive selector that overwrites\n                    // any other selector\n                    for (const entry of this._entries) {\n                        entry._score = 0;\n                    }\n                    entry._score = 1000;\n                    break;\n                }\n            }\n        }\n        // needs sorting\n        this._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n    }\n    static _compareByScoreAndTime(a, b) {\n        if (a._score < b._score) {\n            return 1;\n        }\n        else if (a._score > b._score) {\n            return -1;\n        }\n        // De-prioritize built-in providers\n        if (isBuiltinSelector(a.selector) && !isBuiltinSelector(b.selector)) {\n            return 1;\n        }\n        else if (!isBuiltinSelector(a.selector) && isBuiltinSelector(b.selector)) {\n            return -1;\n        }\n        if (a._time < b._time) {\n            return 1;\n        }\n        else if (a._time > b._time) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isBuiltinSelector(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    if (Array.isArray(selector)) {\n        return selector.some(isBuiltinSelector);\n    }\n    return Boolean(selector.isBuiltin);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { ILanguageFeaturesService } from './languageFeatures.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nexport class LanguageFeaturesService {\n    constructor() {\n        this.referenceProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.renameProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.newSymbolNamesProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.codeActionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.definitionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.typeDefinitionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.declarationProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.implementationProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentSymbolProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlayHintsProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.colorProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.codeLensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentRangeFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.onTypeFormattingEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.signatureHelpProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.hoverProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentHighlightProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.multiDocumentHighlightProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.selectionRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.foldingRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.linkProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlineCompletionsProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.inlineEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.completionProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.linkedEditingRangeProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentRangeSemanticTokensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentSemanticTokensProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentDropEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n        this.documentPasteEditProvider = new LanguageFeatureRegistry(this._score.bind(this));\n    }\n    _score(uri) {\n        return this._notebookTypeResolver?.(uri);\n    }\n}\nregisterSingleton(ILanguageFeaturesService, LanguageFeaturesService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class SyncDescriptor {\n    constructor(ctor, staticArguments = [], supportsDelayedInstantiation = false) {\n        this.ctor = ctor;\n        this.staticArguments = staticArguments;\n        this.supportsDelayedInstantiation = supportsDelayedInstantiation;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SyncDescriptor } from './descriptors.js';\nconst _registry = [];\nexport function registerSingleton(id, ctorOrDescriptor, supportsDelayedInstantiation) {\n    if (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n        ctorOrDescriptor = new SyncDescriptor(ctorOrDescriptor, [], Boolean(supportsDelayedInstantiation));\n    }\n    _registry.push([id, ctorOrDescriptor]);\n}\nexport function getSingletonServiceDescriptors() {\n    return _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n"],"names":["isPathSeparator","code","toSlashes","osPath","replace","sep","toPosixPath","indexOf","test","getRoot","path","len","length","firstLetter","charCodeAt","pos","start","slice","isWindowsDriveLetter","isEqualOrParent","base","parentCandidate","ignoreCase","separator","sepOffset","charAt","char0","hasDriveLetter","isWindowsOS","score","selector","candidateUri","candidateLanguage","candidateIsSynchronized","candidateNotebookUri","candidateNotebookType","Array","isArray","ret","filter","value","language","pattern","scheme","hasAccessToAllModels","notebookType","Math","max","undefined","normalizedPattern","fsPath","ILanguageFeaturesService","isExclusive","every","exclusive","MatchCandidate","constructor","uri","languageId","notebookUri","recursive","this","equals","other","toString","LanguageFeatureRegistry","_notebookInfoResolver","_clock","_entries","_onDidChange","onDidChange","event","register","provider","entry","_score","_time","push","_lastCandidate","fire","idx","splice","has","model","all","_updateScores","result","ordered","_orderedForEach","orderedGroups","lastBucket","lastBucketScore","callback","notebookInfo","candidate","getLanguageId","type","sort","_compareByScoreAndTime","a","b","isBuiltinSelector","some","Boolean","isBuiltin","LanguageFeaturesService","referenceProvider","bind","renameProvider","newSymbolNamesProvider","codeActionProvider","definitionProvider","typeDefinitionProvider","declarationProvider","implementationProvider","documentSymbolProvider","inlayHintsProvider","colorProvider","codeLensProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","onTypeFormattingEditProvider","signatureHelpProvider","hoverProvider","documentHighlightProvider","multiDocumentHighlightProvider","selectionRangeProvider","foldingRangeProvider","linkProvider","inlineCompletionsProvider","inlineEditProvider","completionProvider","linkedEditingRangeProvider","documentRangeSemanticTokensProvider","documentSemanticTokensProvider","documentDropEditProvider","documentPasteEditProvider","_notebookTypeResolver","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","_registry","registerSingleton","id","ctorOrDescriptor","getSingletonServiceDescriptors","_util","serviceIds","Map","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","IInstantiationService","createDecorator","serviceId","get","target","key","index","arguments","Error","storeServiceDependency","set"],"sourceRoot":""}